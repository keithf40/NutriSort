/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/aarch64/ninja -G Ninja -S /Users/matthewjuranek/Project3DSA -B /Users/matthewjuranek/Project3DSA/cmake-build-debug
-- Populating cpr
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/cpr-subbuild
[0/7] Performing update step for 'cpr-populate'
[1/7] No patch step for 'cpr-populate'
[3/7] No configure step for 'cpr-populate'
[4/7] No build step for 'cpr-populate'
[5/7] No install step for 'cpr-populate'
[6/7] No test step for 'cpr-populate'
[7/7] Completed 'cpr-populate'
-- C++ Requests CMake Options
-- =======================================================
--   CPR_GENERATE_COVERAGE: OFF
--   CPR_CURL_NOSIGNAL: OFF
--   CPR_USE_SYSTEM_GTEST: OFF
--   CPR_FORCE_USE_SYSTEM_CURL: OFF
--   CPR_ENABLE_SSL: ON
--   CPR_FORCE_OPENSSL_BACKEND: OFF
--   CPR_FORCE_WINSSL_BACKEND: OFF
--   CPR_FORCE_DARWINSSL_BACKEND: OFF
--   CPR_BUILD_TESTS: ON
--   CPR_BUILD_TESTS_SSL: ON
-- =======================================================
-- Automatically detecting SSL backend.
-- Detecting SSL backend...
-- SSL auto detect: Using DarwinSSL.
-- Configuring build in curl...
-- Populating zlib
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/zlib-subbuild
[0/7] Performing update step for 'zlib-populate'
[1/7] No patch step for 'zlib-populate'
[3/7] No configure step for 'zlib-populate'
[4/7] No build step for 'zlib-populate'
[5/7] No install step for 'zlib-populate'
[6/7] No test step for 'zlib-populate'
[7/7] Completed 'zlib-populate'
-- Using CMake version 3.27.8
-- ZLIB_HEADER_VERSION: 1.2.11
-- ZLIBNG_HEADER_VERSION: 2.0.0-RC2
-- Arch detected: 'aarch64'
-- Basearch of 'aarch64' has been detected as: 'arm'
-- ARM floating point arch: 
-- Architecture supports unaligned reads
-- Architecture supports unaligned reads of > 4 bytes
-- Architecture-specific source files: arch/arm/armfeature.c;arch/arm/crc32_acle.c;arch/arm/insert_string_acle.c;arch/arm/adler32_neon.c;arch/arm/chunkset_neon.c;arch/arm/slide_neon.c
-- The following features have been enabled:

 * CMAKE_BUILD_TYPE, Build type: Debug (selected)
 * WITH_GZFILEOP, Compile with support for gzFile related functions
 * ZLIB_COMPAT, Compile with zlib compatible API
 * WITH_OPTIM, Build with optimisation
 * WITH_NEW_STRATEGIES, Use new strategies
 * WITH_UNALIGNED, Support unaligned reads on platforms that support it
 * WITH_ACLE, Build with ACLE
 * WITH_NEON, Build with NEON intrinsics
 * ACLE_CRC, Support ACLE optimized CRC hash generation, using "-march=armv8-a+crc"
 * NEON_ADLER32, Support NEON instructions in adler32, using "-march=armv8-a+simd"
 * NEON_SLIDEHASH, Support NEON instructions in slide_hash, using "-march=armv8-a+simd"

-- The following OPTIONAL packages have been found:

 * Git

-- The following features have been disabled:

 * ZLIB_ENABLE_TESTS, Build test binaries
 * ZLIB_DUAL_LINK, Dual link tests against system zlib
 * WITH_SANITIZER, Build with sanitizer (Memory, Address, Undefined)
 * WITH_FUZZERS, Build test/fuzz
 * WITH_NATIVE_INSTRUCTIONS, Instruct the compiler to use the full instruction set on this host (gcc/clang -march=native)
 * WITH_MAINTAINER_WARNINGS, Build with project maintainer warnings
 * WITH_CODE_COVERAGE, Enable code coverage reporting
 * WITH_INFLATE_STRICT, Build with strict inflate distance checking
 * WITH_INFLATE_ALLOW_INVALID_DIST, Build with zero fill for inflate invalid distances
 * INSTALL_UTILS, Copy minigzip and minideflate during install

-- Enabled curl SSL
CMake Warning (dev) at /Applications/CLion.app/Contents/bin/cmake/mac/aarch64/share/cmake-3.27/Modules/FetchContent.cmake:1316 (message):
  The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is
  not set.  The policy's OLD behavior will be used.  When using a URL
  download, the timestamps of extracted files should preferably be that of
  the time of extraction, otherwise code that depends on the extracted
  contents might not be rebuilt if the URL changes.  The OLD behavior
  preserves the timestamps from the archive instead, but this is usually not
  what you want.  Update your project to the NEW behavior or specify the
  DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this
  robustness issue.
Call Stack (most recent call first):
  cmake-build-debug/_deps/cpr-src/CMakeLists.txt:182 (FetchContent_Declare)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Populating curl
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/curl-subbuild
ninja: no work to do.
-- curl version=[7.75.0]
-- Could NOT find LibSSH2 (missing: LIBSSH2_LIBRARY LIBSSH2_INCLUDE_DIR) 
-- CA path only supported by OpenSSL, GnuTLS or mbed TLS. Set CURL_CA_PATH=none or enable one of those TLS backends.
-- Enabled features: SSL IPv6 unixsockets libz AsynchDNS alt-svc
-- Enabled protocols: HTTP HTTPS
-- Enabled SSL backends: Secure Transport
-- Not using system gtest, using built-in googletest project instead.
CMake Warning (dev) at /Applications/CLion.app/Contents/bin/cmake/mac/aarch64/share/cmake-3.27/Modules/FetchContent.cmake:1316 (message):
  The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is
  not set.  The policy's OLD behavior will be used.  When using a URL
  download, the timestamps of extracted files should preferably be that of
  the time of extraction, otherwise code that depends on the extracted
  contents might not be rebuilt if the URL changes.  The OLD behavior
  preserves the timestamps from the archive instead, but this is usually not
  what you want.  Update your project to the NEW behavior or specify the
  DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this
  robustness issue.
Call Stack (most recent call first):
  cmake-build-debug/_deps/cpr-src/CMakeLists.txt:214 (FetchContent_Declare)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Populating googletest
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/googletest-subbuild
ninja: no work to do.
CMake Deprecation Warning at cmake-build-debug/_deps/googletest-src/CMakeLists.txt:4 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at cmake-build-debug/_deps/googletest-src/googlemock/CMakeLists.txt:45 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Deprecation Warning at cmake-build-debug/_deps/googletest-src/googletest/CMakeLists.txt:56 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


CMake Warning (dev) at cmake-build-debug/_deps/googletest-src/googletest/cmake/internal_utils.cmake:243 (find_package):
  Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
  are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
  the cmake_policy command to set the policy and suppress this warning.

Call Stack (most recent call first):
  cmake-build-debug/_deps/googletest-src/googletest/CMakeLists.txt:91 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Building mongoose project for test support.
CMake Warning (dev) at /Applications/CLion.app/Contents/bin/cmake/mac/aarch64/share/cmake-3.27/Modules/FetchContent.cmake:1316 (message):
  The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is
  not set.  The policy's OLD behavior will be used.  When using a URL
  download, the timestamps of extracted files should preferably be that of
  the time of extraction, otherwise code that depends on the extracted
  contents might not be rebuilt if the URL changes.  The OLD behavior
  preserves the timestamps from the archive instead, but this is usually not
  what you want.  Update your project to the NEW behavior or specify the
  DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this
  robustness issue.
Call Stack (most recent call first):
  cmake-build-debug/_deps/cpr-src/CMakeLists.txt:251 (FetchContent_Declare)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Populating mongoose
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/mongoose-subbuild
ninja: no work to do.
-- Installing: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/mongoose-src/mongoose.CMakeLists.txt
-- Populating json
-- Configuring done (0.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/json-subbuild
[0/7] Performing update step for 'json-populate'
[1/7] No patch step for 'json-populate'
[3/7] No configure step for 'json-populate'
[4/7] No build step for 'json-populate'
[5/7] No install step for 'json-populate'
[6/7] No test step for 'json-populate'
[7/7] Completed 'json-populate'
CMake Deprecation Warning at cmake-build-debug/_deps/json-src/CMakeLists.txt:1 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.


-- Using the single-header code from /Users/matthewjuranek/Project3DSA/cmake-build-debug/_deps/json-src/single_include/
-- Operating system: Darwin-23.2.0; ProductName:		macOS; ProductVersion:		14.2.1; BuildVersion:		23C71; Darwin Matthews-MacBook-Air.local 23.2.0 Darwin Kernel Version 23.2.0: Wed Nov 15 21:53:34 PST 2023; root:xnu-10002.61.3~2/RELEASE_ARM64_T8103 arm64
-- Compiler: Apple clang version 15.0.0 (clang-1500.3.9.4); Target: arm64-apple-darwin23.2.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
-- Testing standards: 11 14 17 20 23
-- Configuring done (1.6s)
CMake Warning (dev):
  Policy CMP0042 is not set: MACOSX_RPATH is enabled by default.  Run "cmake
  --help-policy CMP0042" for policy details.  Use the cmake_policy command to
  set the policy and suppress this warning.

  MACOSX_RPATH is not specified for the following targets:

   gmock
   gmock_main
   gtest
   gtest_main

This warning is for project developers.  Use -Wno-dev to suppress it.

-- Generating done (0.1s)
-- Build files have been written to: /Users/matthewjuranek/Project3DSA/cmake-build-debug
